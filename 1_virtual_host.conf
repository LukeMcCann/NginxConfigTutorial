# Required for configuration to be valid
events {}

#  Context for handling http requests
http {

    # Mime types 
    # If css is not loading it is likely sending a text/plain type.
    # the types context provideds nginx with context types for given file
    # extensions
    types {
        # Specifies the mime type and the extension to be associated with
        # text/html html;
        # text/css css;

        # nginx allows for pieces of configuration from separate files
        # mime.types exists in /etc/nginx already, which contains
        # a very complete selection of mime types, including filetype variations
        include mime.types;
    }

    # Virtual Host/Server context
    # Listens on a port for http: 80 or https: 443
    server {

        # port to listen on
        listen 80; 

        # domain, subdomain or ip for which the server context exists
        server_name 127.0.0.1; 

        # root path from which nginx serves requests  
        # This configuration serves static pages from the demo directory
        root /sites/demo;    

        # Most used configuration in any nginx configuration
        # defines and configures the behaviour of specific URIs and/or requests
        # Whilst server is great for matchin static pages location allows us
        # to specify that on the receipt of a specific request URL the behaviour
        # which is triggered

        # Prefix match - matches URI starting with /greet
        location /greet {
            # manipualte the response
            return 200 'Hello from NGINX /greet location';
        }          

        # Exact match - matches URI matching exactly with /greet
        location = /greet {
            # manipualte the response
            return 200 'Hello from NGINX /greet EXACT location';
        }     

        # Regex match - matches URI based on a regular expression
        location ~ /greet[0-9] {
            return 200 'Hello from NGINX /greet REGEX location';
        }   

        # Regex match - matches URI based on a regular expression case insensitive
        location ~* /greet[0-9] {
            return 200 'Hello from NGINX /greet REGEX CASE INSENSITIVE location';
        }   

        # Nginx assigns priority to each of these location modifiers, with a REGEX 
        # being more important than a prefix match. This is regardless of order
        # in which the location context blocks are configured.

        # Preferential prefix - has higher importance than REGEX
        location ^~ /Greet2 {
            return 200 'Hello from NGINX /greet PREFERENTIAL PREFIX location';
        }

        # Nginx Priority Order (1 = Most Important):
        # 1. = Exact Match
        # 2. ^~ Preferential Prefix Match
        # 3. ~* REGEX Match
        # 4. Prefix Match

    }
}