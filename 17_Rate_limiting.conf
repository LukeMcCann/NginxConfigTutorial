user www-data;

worker_processes auto;

events {
  worker_connections 1024;
}

http {

  include mime.types;

  # Define limit zone
  # define memory zonw to track limits
  # we can use this for logins by using $binary_remote_addr 
  # this would limit users logins by their IP slowing down
  # a brute force attack.
  limit_req_zone $request_uri zone=MYZONE:10m rate=1r/s;

  # Redirect all traffic to HTTPS
  server {
    listen 80;
    server_name 167.99.93.26;
    return 301 https://$host$request_uri;
  }

  server {

    listen 443 ssl http2;
    server_name 167.99.93.26;

    root /sites/demo;

    index index.html;

    ssl_certificate /etc/nginx/ssl/self.crt;
    ssl_certificate_key /etc/nginx/ssl/self.key;

    # Disable SSL
    # SSL has been phased out
    # replaced by the superior security
    # of TLS
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Optimise cipher suits
    ssl_prefer_server_ciphers on;
    # Ciphers to use or not (!) to use
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    # Enable DH Params
    # Allow DH key exchange, allowing
    # server to perform key exchanges with perfect
    # secrecy
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Enable HSTS
    # Strict transport security
    # don't load anything over HTTP - minimise redirects from port 80 to 443
    add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL sessions
    # cache SSL sessions
    # caches our handshakes improving server times
    # setting to shared means the cache is kept in memory
    # and can be accessed by any worker process.
    # location:name:size
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;
    # provide the browser with a ticket that valdiates the session
    ssl_session_tickets on;

    location / {
      # Burst allowance changes the default
      # behaviour of immediately rejecting
      # requests over the limit to allow
      # connections from the initial value
      # up to this value over the given period.
      # These responses will however not be
      # responded to immediately, as they
      # must still adhere to the specified limit.
      limit_req zone=MYZONE burst=5 nodelay;
      try_files $uri $uri/ =404;
    }

    location ~\.php$ {
      # Pass php requests to the php-fpm service (fastcgi)
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.1-fpm.sock;
    }

  }
}
