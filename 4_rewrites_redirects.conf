events {}

http {

    server {

        listen 80;
        server_name 127.0.0.1;

        root /sites/demo

        rewrite ^/user/\w+ /greet;

        location /greet {
            return 200 "Hello User";
        }

        location = /greet/mark {
            return 200 "Hello Mark";
        }

        # Return statements differ when given a 
        # 300 code for redirects. Instead of accepting
        # a string as the second parameter to return
        # the return method now accepts a URI instead.
        #
        # location /logo {
        #     return 307 /test.png;
        # }

        # Redirects tell the client performing the request
        # where to go instead. In this case the URL remains the same.

        # Rewrites mutate the original request internally.
        # the first argument is our string to match (OR REGEX)
        # the second argument being the URI to direct to.
        # When a URI is rewritten it is also reevaluated by
        # nginx as a completely new request. This means
        # the new request begins from the top of the file again.

        # Nginx also allows REGEX apture groups
        # if we have a rewrte:
        #
        # rewrite ^/user/(\w+) /greet/$1
        # 
        # we access our capture groups in order they are declared the first capture group
        # (\w+) is accessed by $1, if we had a second it would be $2 and so on.
    }
}